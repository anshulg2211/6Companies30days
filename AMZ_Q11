class Solution
{
    public:
    //Function to serialize a tree and return a list containing nodes of tree.
    vector<int> serialize(Node *root) 
    {
        vector<int> inOrd;
        stack<Node*> s;
        Node* temp = root;
        while(temp || !s.empty())
        {
            while(temp)
            {
                s.push(temp);
                temp = temp->left;
            }
            temp = s.top();
            s.pop();
            inOrd.push_back(temp->data);
            temp=temp->right;
        }
        return inOrd;
    }
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {
       Node* root = new Node(A[0]);
       Node* temp = root;
       for(int i=1;i<(int)A.size();i++)
       {
           temp->right = new Node(A[i]);
           temp=temp->right;
       }
       return root;
    }

};
